/*         Nicholas Losby
        nlosby@iastate.edu
        CPRE 185 Section B
Programming Practice 5
         <Reflection 1 What were you trying to learn or achieve?>
                2-D Arrays
        <Reflection 2 Were you successful? Why or Why not?>
        Yeah, I belive so. The program works.
<Reflection 3 Would you do anything differently if starting this program over?  If so, explain what.>
        Not really. If anything I want to make an AI for it but I don't see that happening anytime soon.
<Reflection 4 Think about the most important thing you learned when writing this piece of code.  What was it and explain why it was significant.>
        More use with pointers meaning less headaches in the future.
*/

#include <stdio.h>

void MakeGameBoard(char board[3][3]);

int CheckForWinner(char board[3][3]);
void PrintBoard(char board[3][3]);
int PromptForPlay(char board[3][3], char* turn);
int PromptForPlayAI(char board[3][3], char* turn);
void AI(char board[3][3], char* turn);



void main (){
	char board[3][3];
	int winner = 0;
	char turn = 'x';
	int i = 0;
	int mode = 0;
	
	printf("Enter a gamemode:\n1: Two Player\n2: Against AI [BETA]\n");
	scanf("%d", &mode);
	
	if (mode == 1) {
		MakeGameBoard(board);
		while (winner == 0) {
			PrintBoard(board);
			PromptForPlay(board, &turn);
			PrintBoard(board);
			winner = CheckForWinner(board);
			}
	}
	else if (mode == 2) {
		MakeGameBoard(board);
		while (winner == 0) {
			PrintBoard(board);
			PromptForPlayAI(board, &turn);
			PrintBoard(board);
			winner = CheckForWinner(board);
			}
	
}
}

void MakeGameBoard(char board[3][3]) {
	int x,y;
	for (x=0;x<3;x++) {
		for (y=0;y<3;y++) {
			board[x][y] = '_';
		}
	}
}

int CheckForWinner(char board[3][3]) {
	int winner = 0;
	int x,y;
	//Horizontal Win
	for (x=0;x<3;x++) {
		if ((board[x][0] == 'x') && (board[x][1] == 'x') && (board[x][2] == 'x')) {
			winner = 1;
		}
		else if ((board[x][0] == 'o') && (board[x][1] == 'o') && (board[x][2] == 'o')){
			winner = 2;
		}
	}

	//Vertical Win
	for (y=0;y<3;y++){
		if ((board[0][y] == 'x') && (board[1][y] == 'x') && (board[2][y] == 'x')) {
			winner = 1;
		}
		else if ((board[0][y] == 'o') && (board[1][y] == 'o') && (board[2][y] == 'o')) {
			winner = 2;
		}
	}
	
	//Diagonal Win (Ugh) Wasn't that bad
	if (((board[0][0] == 'x') && (board[1][1] == 'x') && (board[2][2] == 'x')) || ((board[0][2] == 'x') && (board[1][1] == 'x') && (board[2][0] == 'x'))) {
		winner = 1;
	}
	else if (((board[0][0] == 'o') && (board[1][1] == 'o') && (board[2][2] == 'o')) || ((board[0][2] == 'o') && (board[1][1] == 'o') && (board[2][0] == 'o'))) {
		winner = 2;
	}
	//Print Win
	if (winner == 1) {
		printf("X won!");
	}
	else if (winner == 2) {
		printf("O won!");
	}
	return winner;
}

void PrintBoard(char board[3][3]) {
	int i;
	for (i=0;i<19;i++) {
		printf("\n");
	}
	int x,y;
	for (x=0;x<3;x++) {
		for (y=0;y<3;y++) {
			printf("%c", board[x][y]);
		}
		printf("\n");
	}
}

int PromptForPlay(char board[3][3], char* turn) {
	int x,y;
	printf("%c, Enter coordinates where you wish to play:\n", *turn);
	scanf("%d,%d", &x, &y);
	if (*turn == 'o') {
		board[x][y] = 'o';
		*turn = 'x';
	}
	else {
		board[x][y] = 'x';
		*turn = 'o';
	}
}

int PromptForPlayAI(char board[3][3], char* turn) {
	int x,y;
	if (*turn == 'x') {
		printf("Enter coordinates where you wish to play:\n");
		scanf("%d,%d", &x, &y);
		board[x][y] = 'x';
		*turn = 'o';
		AI(board, turn);
	}
	else if (*turn = 'o') {
		AI(board, turn);
		*turn = 'x';
	}
	else {
		printf("I suck.");
	}
}

void AI(char board[3][3], char* turn) {
	int i;
	for (i=1;i<=9;i++) {
		printf("%d %c",i, *turn);
		if ((i==1) && (board[0][0] = '_') && (*turn == 'o')) {
				board[0][0] = 'o';
				*turn = 'x';
				//return 0;
				}
		else if ((i==2) && (board[0][2] = '_') && (*turn == 'o')) {
				board[0][2] = 'o';
				*turn = 'x';
				//return 0;
				}
		else if ((i==3) && (board[2][0] = '_') && (*turn == 'o')) {
				board[2][0] = 'o';
				*turn = 'x';
				//return 0;
				}
		else if ((i==4) && (board[1][1] = '_') && (*turn == 'o')) {
				board[1][1] = 'o';
				*turn = 'x';
				//return 0;
				}
		else if ((i==5) && (board[1][0] = '_') && (*turn == 'o')) {
				board[1][0] = 'o';
				*turn = 'x';
				//return 0;				
				}
		else if ((i==6) && (board[0][1] = '_') && (*turn == 'o')) {
				board[0][1] = 'o';
				*turn = 'x';
				//return 0;
				}
		else if ((i==7) && (board[1][2] = '_') && (*turn == 'o')) {
				board[1][2] = 'o';
				*turn = 'x';
				//return 0;
				}
		else if ((i==8) && (board[2][1] = '_') && (*turn == 'o')) {
				board[2][1] = 'o';
				*turn = 'x';
				//return 0;
				}
		else if ((i==9) && (board[2][2] = '_') && (*turn == 'o')) {
				board[2][2] = 'o';
				*turn = 'x';
				//return 0;
				}
		else {
			return 0;
			}
		printf("%d",i);
	}
}
